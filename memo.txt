================================================
mysql 설치 및 실행
================================================
sudo apt update
sudo apt install mysql-server -y
sudo systemctl status mysql


o 계정 생성 및 패스워드 설정
ubuntu@202224012-kha:~/git/flask1$ sudo mysql

mysql> ALTER USER 'root'@'localhost' IDENTIFIED WITH mysql_native_password BY '555555';
Query OK, 0 rows affected (0.00 sec)

mysql> ALTER USER 'root'@'%' IDENTIFIED WITH mysql_native_password BY '555555';
Query OK, 0 rows affected (0.00 sec)

mysql> ALTER USER 'flask_user'@'localhost' IDENTIFIED WITH mysql_native_password BY '555555';
mysql> ALTER USER 'flask_user'@'%' IDENTIFIED WITH mysql_native_password BY '555555';

mysql> FLUSH PRIVILEGES;
Query OK, 0 rows affected (0.01 sec)

mysql> commit;
Query OK, 0 rows affected (0.00 sec)


mysql -u root -p


- 기타 명령들

SHOW DATABASES;
USE saramin_db;
SHOW TABLES;
DESCRIBE users;

================================================
[] 파이썬 가상환경
================================================
o 가상환경 만들기
python3 -m venv ../flask_env

o 활성화
source ../flask_env/bin/activate

o 비활성화
deactivate

o 필요 프로그램 설치
pip install -r requirements.txt
없으면, 아래 명령어로 설치
pip install flask pymysql requests beautifulsoup4 pandas schedule gunicorn mysql-connector-python bcrypt PyJWT python-dotenv
pip install mysql-connector-python

o requirements.txt 만들기
pip freeze > requirements.txt

cat requirements.txt

o 기타
python -m flask --version
rm -rf ../flask_env
pip install -r requirements.txt


==========
mysql -u root -p
select user, host from mysql.user;


o 권한 부여
https://goyunji.tistory.com/99

o mysql 외부 접속 허용 user 생성 방법
=============================
mysql -u root -p
CREATE USER 'root'@'%' IDENTIFIED BY '555555'
CREATE USER 'flask_user'@'%' IDENTIFIED BY '555555'
GRANT ALL PRIVILEGES ON *.* TO 'root'@'%' WITH GRANT OPTION;

mysql> select user, host from mysql.user;
+------------------+-----------+
| user             | host      |
+------------------+-----------+
| flask_user       | %         | <- 이렇게 나와야 외부 접속 가능
| root             | %         | <- 이렇게 나와야 외부 접속 가능
| debian-sys-maint | localhost |
| mysql.infoschema | localhost |
| mysql.session    | localhost |
| mysql.sys        | localhost |
| root             | localhost |
+------------------+-----------+
7 rows in set (0.00 sec)

FLUSH PRIVILEGES;
commit;
exit

- config 도 아래와 같이 설정 해야함
sudo vi /etc/mysql/mysql.cnf

!includedir /etc/mysql/conf.d/
!includedir /etc/mysql/mysql.conf.d/

[mysqld]			            # 추가
port=3306 # or any other port	# 추가
bind-address=0.0.0.0		    # 추가

sudo systemctl restart mysql
 service mysql restart




- dbeaver 설정
dbeaver의 CONNECTION-Driver properties-allowPublicKeyRetrieval, TRUE 설정

- 참고자료
https://i-kiin.net/?p=4600

출처: https://saii42.tistory.com/25 [saii 잡다한 블로그:티스토리]

////////////////////////////////////////////
o mysql root 비번 분실 대처

https://velog.io/@sonaky47/mysql-root-%ED%8C%A8%EC%8A%A4%EC%9B%8C%EB%93%9C-%EB%B6%84%EC%8B%A4%ED%96%88%EC%9D%84%EB%95%8C-ubuntu


///////////////////////////////////
*MySQL 서버 실행
///////////////////////////////////
sudo service mysql stop


MySQL 서비스 시작:

sudo service mysql start
MySQL 서비스 상태 확인:

sudo service mysql status
active (running) 상태라면 MySQL 서버가 실행 중입니다.
MySQL 서버 재시작 (필요한 경우):

sudo service mysql restart
MySQL 서버 중지:

sudo service mysql stop


///////////////////////////////////
**db_create.sql 실행 
///////////////////////////////////
2. 명령줄에서 직접 실행
MySQL 명령어를 사용해 SQL 파일 실행:
1
mysql -u root -p < ./crawled-db.sql
MySQL 서버가 파일 내의 명령어를 실행하고 설정을 완료합니다.
실행 결과 확인:

mysql -u root -p
USE saramin_db;
SHOW TABLES;
===================================
. MySQL 클라이언트에서 실행
단계 1: MySQL 서버 접속
MySQL 서버가 실행 중인지 확인:

sudo systemctl status mysql
MySQL 클라이언트 접속:

mysql -u root -p
root 계정 비밀번호를 입력하여 접속합니다.
단계 2: SQL 파일 실행
MySQL 셸에서 파일 실행:

SOURCE /path/to/db_create.sql;
/path/to/db_create.sql를 파일의 실제 경로로 바꿉니다.
실행 완료 후 테이블 확인:

SHOW DATABASES;
USE saramin_db;
SHOW TABLES;
